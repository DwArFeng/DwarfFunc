Alpha_0.1.0_20161010_build_A
	Boom！

Alpha_0.2.0_20161101_build_A 与之前的版本不兼容
	** 因为该版本存在时间过短，所有该版本没有留下 release文件。
	删除infs包，将其中的接口移动到其它的包中——没有必要为了某些接口设置一个单独的包。
		Nameable 改名为 Name，并且移动到 dutil.basic.str中。
		Describeable 改名为 Description，并且移动到 dutil.basic.str中。
		Buildable 移动到 dutil.basic.prog中。
	删除了几个名声不好的包： dutil.cna.CycledBuffer, dutil.str.CycledSlsBuffer, dtuil.gui.swing.NameablePack
	新增 dutil.basic.str.Tag接口，将即含有名称又含有描述的对象统称为标签。
	新增 dutil.basic.str.DefaultTag类，作为 Tag接口的默认实现。
	新增 dutil.basic.gui.swing.DefaultItemListModel，为具有默认选项的swing列表模型。
	修改 dutil.basic.cna.ArrayUtil中的 contact方法，之前的方法可能导致潜在的堆污染。
	新增 dutil.basic.cna.ArrayUtil.contact(T[] first, T[] second)，为两个数组的拼接留出了新的方法。
	删除 dtuil.basic.cls.ClassUtil 中的 isSubClass 方法，因为在Class类中就有类似的方法。
	更改 dutil.basic.num.MusValueable 为 dtuil.basic.num.NumberValue。
	更改 dutil.basic.num.NumTrans 为 dutil.basic.num.NumberUtil。
	删除 dutil.basic.num.UnitTrans ，将其方法转移到 NumberUtil中；将其单位枚举转移到 dutil.basic.num.unit包中。
	新建 dutil.basic.num.unit包，用于放置单位枚举。
	更改 dutil.basic.num.MusValueable 为 dutil.basic.num.NumberValue。
	新建 NumberValueFilter，即数字值过滤器。
	删除 dutil.basic.cna.IDMap， 将会在之后以接口的方式重写。
	删除 dtuil.basic.cna.DumplicateIdException 将会在将来以别的方式进行替代。
	
Alpha_0.3.0_20161101_build_A
	更新源文件结构（对于 release 文件来说没有任何影响）。
	从这个版本开始，每次 release 都会提供 chm 文件。
	
Beta_0.0.0_20161221_build_A
	废弃数个dutil.basic.cna.ArrayUtil 中的不符合命名规范的方法，用符合规范的新方法代替。
	废弃 dutil.basic.cna.CollectionUtil.array2Iterator(T[] array) 方法。
	新增 dutil.basic.cna.ArrayUtil.array2Iterable(T[] array) 方法。
	新增 
		int dutil.basic.num.max(int... is);
		int dutil.basic.num.min(int... is);
		double dutil.basic.num.max(double... ds);
		double dutil.basic.num.min(double... ds);
		用于判定多个整型或双精度浮点数中的最大值和最小值。
		新增专用工具包 dutil.develop 用于封装编程开发时常用且高度重复的功能模块。
		修改部分注释。
	新增 dutil.develop包，用于封装常用的且代码高度重复的开发模块。
	新增 dutil.develop.cfg 包，用于程序的配置功能，具体功能请参阅API。
	新增 dutil.basic.gui.swing.SwingUtil 提供swing工具的常用方法。
	修改 dutil.demo.com.dwarfeng.dutil.demo.basic.ClassUtilDemo，将其实例子类封闭。
	更改工具包中的资源位置，以避免潜在的资源路径冲突。
	
Beta_0.0.1_20161227_build_A
	废弃 dutil.develop.cfg.io.ConfigLoader 中 Map<ConfigKey, String> loadConfig() 方法。
		将其改为 void loadConfig(ConfigModel)，以对齐同包中 ConfigSaver 的 void saveConfig(ConfigModel)方法。
	增加 dutil.develop.cfg.ConfigUtil 中的方法 ConfigModel unmodifiableConfigModel(ConfigModel):
		用于根据指定的配置模型生成一个不可更改的配置模型。
	更改 dtuil.demo 包中的部分代码。
	从现在开始，api文档的格式将变成 dwarfutil-api-beta-0.0.1.a
	
Beta_0.0.2_20170112_build_A
	将 dutil.develop.cfg.io 包中的 ConfigLoader 和 ConfigSaver 中的方法名称更改为符合命名规范的名称。
	ConfigModel 将禁用值为 null 的配置值。
	新增 DefaultConfigFirmProps 为 ConfigFirmProps 接口的默认实现。
	新增 LocaleConfigChecker，用于检验一个字符串是否合乎标准国家/地区代码的规定。
	修改所有的类中的注释：@since 从java版本改为 dwarfutil版本。
	
Beta_0.0.2_20170115_build_B
	为了名称规范，新建 dutil.develop.cfg.ConfigObverser 以代替 ConfigModelObverser。
		这可能导致该类与前版不兼容。
	新增 dutil.develop.cfg.ConfigAdapter。
	修复 FactoriesByString 类中的 bug。
	为 dutil.develop.cfg.DefaultConfigModel 增加了默认的构造器方法。
	从此版本开始，所有的 release 将加上版本号。
	
Beta_0.0.3_20170128_build_A
	新增 dutil.basic.threads.NumberedThreadFactory，用于提供自动编号的线程。
	新增 dutil.basic.gui.swing.JExConsole，用于替代老的 JConsole。
	新增 dutil.basic.prog.Loader<T>; dutil.basic.prog.Saver<T>，用于对指定对象进行读取和保存。
	新增 dutil.basic.io.StreamLoader<T>; duitl.basic.io.StreamSaver<T> ，用于以流的方式对对象进行读取和保存。
	调整 dutil.develop.cfg.io包中的结构，废弃了原来的结构，使用新的 Loader&Saver 结构构造新的类。
	新增 dutil.basic.str.StringComparator<String> 提供文本的字典排序算法。
	新增 dutil.basic.cna.insert(List<T> list, T obj, Comparator<? super T> c) 方法，用于在已排序的列表中插入元素。
	新增 dutil.basic.prog.RuntimeState，用于指示程序的运行状态。
	新增 dutil.basic.prog.Checker<T> 用于指示类型 T 是否合法。	
	
	新增 protected 域：dutil.basic.gui.swing.JExconsole.popup 用于指示控制台的右键菜单。
	
Beta_0.1.0_20170403_build_A
	调整 dutil.basic.prog.Saver 与 Loader
		将这两个类移动到更加符合其功能的 dutil.basic.io 包中，并过时 prog 包中的相应接口。
		为Saver 和 Loader 接口提供另一种读写方式：连续读写方式。
	调整 dutil.develop.cfg.DefaultConfigModel 
		增加了新的构造器方法，现在用户可以分别指定模型中 键-当前值映射 和 键-固定属性映射的 Map 代理。
		其中的设置当前值与固定属性的方法，在现在的设置方法中，即使新值与旧值相等，仍然会触发观察器。
	调整 dutil.develop.cfg.io.PropConfigLoader 与 PropConfigSaver 中的方法，实现了其接口新增的方法。
	新增 dutil.basic.prog.ProcessFailedException，用于指示在方法处理过程中因为别的异常导致的处理过程失败。
	调整 dutil.basic.gui.swing.JExconsole
		将 popup-右键菜单类设置为可更改的，这样，用户在编程的时候，可以随时改变 popup。
		新增取消控制台输入功能，当控制台输入框打开的时候，可以调用方法取消本次输入。
	新增 dutil.basic.prog.ElementWithKey 接口，该接口指示实现此接口的类拥有一个可辨识的主键。
	新增 dutil.basic.str.DefaultName 类，为 dutil.basic.str.Name 接口的默认实现。
	新增 dutil.test 包，用于存储调试用的代码，该包不在 release 版本发布。
	对 dutil.develop.cfg 包进行了重大升级
		引入 Exconfig 架构，对配置模型的处理能力进行了一次升级：
			该架构下的配置模型 ExconfigModel 可以将配置的有效值直接转化为用户需要的格式，并且可以方便的扩展观察器。
		新增 dutil.develop.cfg.ExconfigModel
		新增 dutil.develop.cfg.SyncExconfigModel
		新增 dutil.develop.cfg.SyncConfigModel
		新增 dutil.develop.cfg.struct 包
			新增 dutil.develop.cfg.ExconfigEntry
			新增 dutil.develop.cfg.struct.ValueParser
		新增 dutil.develop.cfg.struct.parser包
			新增 dutil.develop.cfg.parse.IntegerValueParser
		新增 dutil.develop.cfg.struct.obv包
			新增 dutil.develop.cfg.parse.ExconfigObverser
			新增 dutil.develop.cfg.parse.ExconfigAdapter
	新增 dutil.basic.cna.model 包以及其子包
		提供了大量的模型预设，可大大减少开发项目时的开发模型的工作量。
		提供 ListModel, SetModel, MapModel, KeyListModel, KeySetModel 模型以及其实现，外加不可更改与线程安全的版本。
	新增 dutil.develop.backgr 包，提供程序后台的实现
	新增 dutil.basic.UnsafeGetter<T> 接口
	
Beta_0.1.1_20170410_build_A
	该版本可能与之前的版本有轻微的不兼容。
	在接口 dutil.basic.cna.model.KeyListModel 中添加方法 V get(K)。
		这可能导致该版本与前一个版本有轻微的不兼容。
	在接口 dutil.basic.cna.model.KeySetModel 中添加方法 Vget(K)。
		这可能导致该版本与前一个版本有轻微的不兼容。
	修正 dutil.basic.cna.model 包中的内容。
		AbstractMapModel 中的 obversers 属性由 private 改为 protected。
		AbstractSetModel 中的 obversers 属性由 private 改为 protected。
	新增 dtuil.develop.resource包，提供资源文件管理工具。
	新增 dutil.develop.i18n包，提供国际化的管理工具。
			
Beta_0.1.1_20170413_build_B
	该版本为 Beta_0.1.1_20170410_build_A 的更新版本，修复了其中的众多 bug。
	修改了程序的版本标志：
		之前的A版本虽然是Beta_0.1.1版本，但是版本标志还是Beta_0.1.0.
	修改了 dutil.develop.i18n中的bug：
		DelegateI18nHandler 中的移除方法如果移除了当前语言所在的国际化信息，不会将当前语言置为 null 的 bug。
	修改了 dutil.basic.cna.model包中的一些 bug：
		DelegateKeySet 和 DelegateKeyList 的 get 方法在入口参数为 null 的时候行为异常。
	修改了 dutil.develop.backgr中的一些不足：
		修改 dutil.develop.backgr.Task 接口， getException() 改为 getThrowable()，这样，即使在 Task 运行的时候抛出 Error，也能正常捕捉。
	完善了 dutil.develop.cfg 中的方法：
		将 dutil.develop.cfg.io.PropConfigSaver.countinuousSave(CurrentValueContainer) 的返回集合改成了 LinkedHashSet ，这样的话，异常可以按照产生的顺序进行迭代。
		将 dutil.develop.cfg.io.PropConfigLoadr.countinuousLoad(CurrentValueContainer) 的返回集合改成了 LinkedHashSet，道理同上。
		
Beta_0.1.2
	命名规范化
		新增 dutil.develop.cfg.parser.LocaleValueParser，用于替代不符合命名规范的 LocaleParser。
	参数名称规范化
		修改 dutil.develop.i18n.obv.I18nObverser 以及 I18nAdapter 方法中的参数名称。
	新增 dutil.develop.cfg.parser.StringValueParser，作为配置文本与String相互转换的值解析器。
	新增方法 <E> dutil.basic.cna.CollectionUtil.unmodifiableIterator(Iterator<E>)，用以返回根据指定的迭代器生成的不可编辑的迭代器。
	新增工具类 dutil.basic.threads.ThreadSafeUtil，用于提供外部线程安全接口的锁定以及解锁方法。
	新增方法 
		duitl.basic.io.FileUtil.listAllFile(File) 用于列出一个文件夹下的所有文件以及子文件夹下的所有文件。
		duitl.basic.io.FileUtil.listAllFile(File file, FileFilter filter)，在之上方法的基础下筛选符合要求的文件。
		