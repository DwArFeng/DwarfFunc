Alpha_0.1.0_20161010_build_A
	Boom！

Alpha_0.2.0_20161101_build_A 与之前的版本不兼容
	** 因为该版本存在时间过短，所有该版本没有留下 release文件。
	删除infs包，将其中的接口移动到其它的包中——没有必要为了某些接口设置一个单独的包。
		Nameable 改名为 Name，并且移动到 dutil.basic.str中。
		Describeable 改名为 Description，并且移动到 dutil.basic.str中。
		Buildable 移动到 dutil.basic.prog中。
	删除了几个名声不好的包： dutil.cna.CycledBuffer, dutil.str.CycledSlsBuffer, dtuil.gui.swing.NameablePack
	新增 dutil.basic.str.Tag接口，将即含有名称又含有描述的对象统称为标签。
	新增 dutil.basic.str.DefaultTag类，作为 Tag接口的默认实现。
	新增 dutil.basic.gui.swing.DefaultItemListModel，为具有默认选项的swing列表模型。
	修改 dutil.basic.cna.ArrayUtil中的 contact方法，之前的方法可能导致潜在的堆污染。
	新增 dutil.basic.cna.ArrayUtil.contact(T[] first, T[] second)，为两个数组的拼接留出了新的方法。
	删除 dtuil.basic.cls.ClassUtil 中的 isSubClass 方法，因为在Class类中就有类似的方法。
	更改 dutil.basic.num.MusValueable 为 dtuil.basic.num.NumberValue。
	更改 dutil.basic.num.NumTrans 为 dutil.basic.num.NumberUtil。
	删除 dutil.basic.num.UnitTrans ，将其方法转移到 NumberUtil中；将其单位枚举转移到 dutil.basic.num.unit包中。
	新建 dutil.basic.num.unit包，用于放置单位枚举。
	更改 dutil.basic.num.MusValueable 为 dutil.basic.num.NumberValue。
	新建 NumberValueFilter，即数字值过滤器。
	删除 dutil.basic.cna.IDMap， 将会在之后以接口的方式重写。
	删除 dtuil.basic.cna.DumplicateIdException 将会在将来以别的方式进行替代。
	
Alpha_0.3.0_20161101_build_A
	更新源文件结构（对于 release 文件来说没有任何影响）。
	从这个版本开始，每次 release 都会提供 chm 文件。
	
Beta_0.0.0_20161221_build_A
	废弃数个dutil.basic.cna.ArrayUtil 中的不符合命名规范的方法，用符合规范的新方法代替。
	废弃 dutil.basic.cna.CollectionUtil.array2Iterator(T[] array) 方法。
	新增 dutil.basic.cna.ArrayUtil.array2Iterable(T[] array) 方法。
	新增 
		int dutil.basic.num.max(int... is);
		int dutil.basic.num.min(int... is);
		double dutil.basic.num.max(double... ds);
		double dutil.basic.num.min(double... ds);
		用于判定多个整型或双精度浮点数中的最大值和最小值。
		新增专用工具包 dutil.develop 用于封装编程开发时常用且高度重复的功能模块。
		修改部分注释。
	新增 dutil.develop包，用于封装常用的且代码高度重复的开发模块。
	新增 dutil.develop.cfg 包，用于程序的配置功能，具体功能请参阅API。
	新增 dutil.basic.gui.swing.SwingUtil 提供swing工具的常用方法。
	修改 dutil.demo.com.dwarfeng.dutil.demo.basic.ClassUtilDemo，将其实例子类封闭。
	更改工具包中的资源位置，以避免潜在的资源路径冲突。
	
Beta_0.0.1_20161227_build_A
	废弃 dutil.develop.cfg.io.ConfigLoader 中 Map<ConfigKey, String> loadConfig() 方法。
		将其改为 void loadConfig(ConfigModel)，以对齐同包中 ConfigSaver 的 void saveConfig(ConfigModel)方法。
	增加 dutil.develop.cfg.ConfigUtil 中的方法 ConfigModel unmodifiableConfigModel(ConfigModel):
		用于根据指定的配置模型生成一个不可更改的配置模型。
	更改 dtuil.demo 包中的部分代码。
	从现在开始，api文档的格式将变成 dwarfutil-api-beta-0.0.1.a
	
Beta_0.0.2_20170112_build_A
	将 dutil.develop.cfg.io 包中的 ConfigLoader 和 ConfigSaver 中的方法名称更改为符合命名规范的名称。
	ConfigModel 将禁用值为 null 的配置值。
	新增 DefaultConfigFirmProps 为 ConfigFirmProps 接口的默认实现。
	新增 LocaleConfigChecker，用于检验一个字符串是否合乎标准国家/地区代码的规定。
	修改所有的类中的注释：@since 从java版本改为 dwarfutil版本。
	
Beta_0.0.2_20170115_build_B
	为了名称规范，新建 dutil.develop.cfg.ConfigObverser 以代替 ConfigModelObverser。
		这可能导致该类与前版不兼容。
	新增 dutil.develop.cfg.ConfigAdapter。
	修复 FactoriesByString 类中的 bug。
	为 dutil.develop.cfg.DefaultConfigModel 增加了默认的构造器方法。
	从此版本开始，所有的 release 将加上版本号。
	
Beta_0.0.3	
	新增 dutil.basic.threads.NumberedThreadFactory，用于提供自动编号的线程。
	新增 dutil.basic.gui.swing.JExConsole，用于替代老的 JConsole。
	新增 dutil.basic.prog.Loader<T>; dutil.basic.prog.Saver<T>，用于对指定对象进行读取和保存。
	新增 dutil.basic.io.StreamLoader<T>; duitl.basic.io.StreamSaver<T> ，用于以流的方式对对象进行读取和保存。
	调整 dutil.develop.cfg.io包中的结构，废弃了原来的结构，使用新的 Loader&Saver 结构构造新的类。
	新增 dutil.basic.str.StringComparator<String> 提供文本的字典排序算法。
	新增 dutil.basic.cna.insert(List<T> list, T obj, Comparator<? super T> c) 方法，用于在已排序的列表中插入元素。
	